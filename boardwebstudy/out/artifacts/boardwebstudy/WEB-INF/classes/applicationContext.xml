<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

<!--    <bean id="tv" class="polymorphism.SamsungTV" p:speaker-ref="apple" p:price="2700000">-->
<!--        <constructor-arg index="0" ref="apple" />-->
<!--        <constructor-arg index="1" value="270000" />-->
<!--        <property name="speaker" ref="apple"></property>-->
<!--        <property name="price" value="2700000"></property>-->
<!--    </bean>-->

<!--    <bean id="sony" class="polymorphism.SonySpeaker"/>-->
<!--    <bean id="apple" class="polymorphism.AppleSpeaker"/>-->

<!--    <bean id="tv" class="polymorphism.LgTv"></bean>-->

<!--    <bean id="collectionBean" class="com.springbook.ioc.CollectionBean">-->
<!--        <property name="addressList">-->
<!--            <list>-->
<!--                <value>서울시 강남구 역삼동</value>-->
<!--                <value>서울시 성동구 행당동</value>-->
<!--            </list>-->
<!--            <set value-type="java.lang.String">-->
<!--                <value>서울시 강남구 역삼동</value>-->
<!--                <value>서울시 성동구 행당동</value>-->
<!--                <value>서울시 성동구 행당동</value>-->
<!--            </set>-->
<!--            <map>-->
<!--                <entry>-->
<!--                    <key><value>고길동</value></key>-->
<!--                    <value>서울시 강남구 역삼동</value>-->
<!--                </entry>-->
<!--                <entry>-->
<!--                    <key><value>마이콜</value></key>-->
<!--                    <value>서울시 강서구 화곡동</value>-->
<!--                </entry>-->
<!--            </map>-->
<!--            <props>-->
<!--                <prop key="고길동">서울시 강남구 역사동</prop>-->
<!--                <prop key="마이콜">서울시 강남구 화곡동</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->
<!--    <beans>-->
<!--        <context:component-scan base-package="polymorphism"></context:component-scan>-->
<!--        <bean class="polymorphism.SonySpeaker"></bean>-->
<!--    </beans>-->
<!--    <context:component-scan base-package="com.springbook.biz"></context:component-scan>-->
<!--    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>-->
<!--    <bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl">-->
<!--        <property name="userDAO" ref="userDAO"/>-->
<!--    </bean>-->
<!--    <bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"/>-->

<!--    <bean id="log" class="com.springbook.biz.common.Log4jAdvice"></bean>-->
<!--    <bean id="before" class="com.springbook.biz.common.BeforeLog"></bean>-->
<!--    <bean id="around" class="com.springbook.biz.common.AroundAdvice"></bean>-->
<!--    <bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice"></bean>-->
<!--    <bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice"></bean>-->
<!--    <aop:config>-->
<!--        <aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))"/>-->
<!--        <aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))"/>-->
<!--        <aop:aspect ref="log">-->
<!--            <aop:after pointcut-ref="allPointcut" method="printLogging"/>-->
<!--&lt;!&ndash;            <aop:around pointcut-ref="allPointcut" method="aroundLog"/>&ndash;&gt;-->
<!--&lt;!&ndash;            <aop:before pointcut-ref="allPointcut" method="beforeLog"/>&ndash;&gt;-->
<!--&lt;!&ndash;            <aop:after-returning pointcut-ref="getPointcut" method="afterLog" returning="returnObj"/>&ndash;&gt;-->
<!--&lt;!&ndash;            <aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog" throwing="exceptObj"/>&ndash;&gt;-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->


    <context:component-scan base-package="com.springbook.biz"></context:component-scan>
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

    <!--  DataSource 설정  -->
    <context:property-placeholder location="classpath:config/database.properties"/>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
<!--        <property name="driverClassName" value="org.h2.Driver"/>-->
<!--        <property name="url" value="jdbc:h2:tcp://localhost/~/test"/>-->
<!--        <property name="username" value="sa"/>-->
<!--        <property name="password" value=""/>-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--  Spring JDBC 설정  -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--  Transaction 설정  -->
<!--    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        <property name="dataSource" ref="dataSource"></property>-->
<!--    </bean>-->

<!--    <tx:advice id="txAdvice" transaction-manager="txManager">-->
<!--        <tx:attributes>-->
<!--            <tx:method name="get*" read-only="true"/>-->
<!--            <tx:method name="*"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->

<!--    <aop:config>-->
<!--        <aop:pointcut id="txPointcut" expression="execution(* com.springbook.biz..*(..))"/>-->
<!--        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>-->
<!--    </aop:config>-->

    <!-- Spring과 Mybatis 연동 -->
<!--    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
<!--        <property name="configLocation" value="classpath:sql-map-config.xml" />-->
<!--        <property name="dataSource" ref="dataSource" />-->
<!--    </bean>-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:sql-map-config.xml" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSession" />
    </bean>

    <!-- Spring과 JPA 연동 설정 -->
<!--    <bean id="jpaVendorAdapter"-->
<!--          class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>-->
<!--    <bean id="entityManagerFactory"-->
<!--          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
<!--        <property name="dataSource" ref="dataSource"></property>-->
<!--        <property name="jpaVendorAdapter" ref="jpaVendorAdapter"></property>-->
<!--        <property name="packagesToScan" value="com.springbook.biz.board"></property>-->
<!--        <property name="jpaProperties">-->
<!--            <props>-->
<!--                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>-->
<!--                <prop key="hibernate.show_sql">true</prop>-->
<!--                <prop key="hibernate.format_sql">true</prop>-->
<!--                <prop key="hibernate.use_sql_comments">true</prop>-->
<!--                <prop key="hibernate.id.new_generator_mappings">true</prop>-->
<!--                <prop key="hibernate.hbm2ddl.auto">create</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter"></property>
    </bean>

    <!--  Transaction 설정  -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="txPointcut" expression="execution(* com.springbook.biz..*(..))" />

        <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice" />
    </aop:config>
</beans>